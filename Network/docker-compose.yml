#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  demoNetwork:

services:
  ca_axis:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.axis.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.axis.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/ce769c69e2a7d97189cf2e5acc2be53a8d3993e733391bcbe1026a80a4110f1c_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/axis.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: caPeerAxis
    networks:
      - demoNetwork

  ca_yes:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.yes.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.yes.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/4bcb77c203cad9e8a8f2984b262bd5e9970701310eecbce46c26c8342ee6ae9c_sk
    ports:
      - "8054:8054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw'
    volumes:
      - ./crypto-config/peerOrganizations/yes.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: caPeerYes
    networks:
      - demoNetwork

  orderer.banking.com:
    container_name: orderer.banking.com
    image: hyperledger/fabric-orderer
    environment:
      - FABRIC_LOGGING_SPEC=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      # - ORDERER_GENERAL_TLS_ENABLED=true
      # - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      # - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      # - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/banking.com/orderers/orderer.banking.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/ordererOrganizations/banking.com:/etc/hyperledger/msp/certs
    networks:
      - demoNetwork

  peer0.axis.com:
    container_name: peer0.axis.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.axis.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=AxisMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      # - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CORE_PEER_ADDRESS=peer0.axis.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      # tls true
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/peer/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/peer/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/peer/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_demoNetwork
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/axis.com/users/Admin@axis.com/msp/:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/axis.com/peers/peer0.axis.com/tls/:/etc/hyperledger/tls/peer
        - ./crypto-config/ordererOrganizations/banking.com/orderers/orderer.banking.com/msp/:/etc/hyperledger/msp
        - ./crypto-config/peerOrganizations/axis.com/peers/peer1.axis.com/tls/:/etc/hyperledger/tls/peer1
        - ./crypto-config/peerOrganizations/axis.com/users:/etc/hyperledger/msp/users
        - ./crypto-config/peerOrganizations/axis.com:/etc/hyperledger/msp/certs
        # - ./crypto-config/ordererOrganizations/banking.com:
        - ./config:/etc/hyperledger/configtx
        - ./../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/chaincode
    networks:
      - demoNetwork
      
  peer1.axis.com:
    container_name: peer1.axis.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.axis.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=AxisMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.axis.com:8051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/peer/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/peer/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/peer/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_demoNetwork
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:8051
      - 8053:8053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/axis.com/users/Admin@axis.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/axis.com/peers/peer1.axis.com/tls:/etc/hyperledger/tls/peer
        - ./crypto-config/peerOrganizations/axis.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
        - ./../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/chaincode
    networks:
      - demoNetwork
  
  peer2.axis.com:
    container_name: peer2.axis.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2.axis.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=AxisMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer2.axis.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/peer/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/peer/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/peer/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_demoNetwork
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 9051:9051
      - 9053:9053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/axis.com/users/Admin@axis.com/msp:/etc/hyperledger/msp/peer
        # - ./crypto-config/peerOrganizations/axis.com/peers/peer2.axis.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/axis.com/peers/peer2.axis.com/tls:/etc/hyperledger/tls/peer
        - ./crypto-config/peerOrganizations/axis.com/users:/etc/hyperledger/msp/users
        - ./../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/chaincode
        - ./config:/etc/hyperledger/configtx
    networks:
      - demoNetwork

  peer0.yes.com:
    container_name: peer0.yes.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.yes.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=YesMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer0.yes.com:10051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:10051
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/peer/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/peer/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/peer/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_demoNetwork
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 10051:7051
      - 10053:10053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/yes.com/peers/peer0.yes.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/yes.com/users/Admin@yes.com/msp:/etc/hyperledger/msp/user
        - ./crypto-config/peerOrganizations/yes.com/peers/peer0.yes.com/tls:/etc/hyperledger/tls/peer
        - ./crypto-config/peerOrganizations/yes.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
        - ./../chaincode:/opt/gopath/src/github.com/hyperledger/fabric/chaincode
    networks:
      - demoNetwork

  peer1.yes.com:
    container_name: peer1.yes.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.yes.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=YesMSP
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.yes.com:11051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_demoNetwork
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 11051:11051
      - 11053:11053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/yes.com/peers/peer1.yes.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/yes.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    networks:
      - demoNetwork

  peer2.yes.com:
    container_name: peer2.yes.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2.yes.com
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_LOCALMSPID=YesMSP
      - CORE_PEER_LISTENADDRESS=0.0.0.0:12051
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer2.yes.com:12051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_demoNetwork
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 12051:12051
      - 12053:12053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/yes.com/peers/peer2.yes.com/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/yes.com/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    networks:
      - demoNetwork
